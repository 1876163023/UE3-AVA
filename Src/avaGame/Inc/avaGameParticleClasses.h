/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif


// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)


#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern FName AVAGAME_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

class UavaParticleModuleAirResistance : public UParticleModuleAccelerationBase
{
public:
    //## BEGIN PROPS avaParticleModuleAirResistance
    struct FRawDistributionVector AirResistanceBySize;
    struct FRawDistributionVector AirResistanceByVelocity;
    //## END PROPS avaParticleModuleAirResistance

    DECLARE_CLASS(UavaParticleModuleAirResistance,UParticleModuleAccelerationBase,0,avaGame)
	virtual void	Update(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime);
	virtual void	UpdateEditor(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime, UParticleModule* LowerLODModule, FLOAT Multiplier);
};

class UavaParticleModuleGravity : public UParticleModuleAccelerationBase
{
public:
    //## BEGIN PROPS avaParticleModuleGravity
    struct FRawDistributionFloat GravityAmount;
    //## END PROPS avaParticleModuleGravity

    DECLARE_CLASS(UavaParticleModuleGravity,UParticleModuleAccelerationBase,0,avaGame)
	virtual void	Update(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime);
	virtual void	UpdateEditor(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime, UParticleModule* LowerLODModule, FLOAT Multiplier);
};

class UavaParticleModuleColorScaleByAmbient : public UParticleModuleColorBase
{
public:
    //## BEGIN PROPS avaParticleModuleColorScaleByAmbient
    FVector ParticleColorOffset;
    FLOAT AmbientBase;
    //## END PROPS avaParticleModuleColorScaleByAmbient

    DECLARE_CLASS(UavaParticleModuleColorScaleByAmbient,UParticleModuleColorBase,0,avaGame)
	virtual void	Update(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime);
	virtual void	UpdateEditor(FParticleEmitterInstance* Owner, INT Offset, FLOAT DeltaTime, UParticleModule* LowerLODModule, FLOAT Multiplier);
};

#endif


#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef AVAGAME_PARTICLE_NATIVE_DEFS
#define AVAGAME_PARTICLE_NATIVE_DEFS

DECLARE_NATIVE_TYPE(avaGame,UavaParticleModuleAirResistance);
DECLARE_NATIVE_TYPE(avaGame,UavaParticleModuleColorScaleByAmbient);
DECLARE_NATIVE_TYPE(avaGame,UavaParticleModuleGravity);

#define AUTO_INITIALIZE_REGISTRANTS_AVAGAME_PARTICLE \
	UavaParticleModuleAirResistance::StaticClass(); \
	UavaParticleModuleColorScaleByAmbient::StaticClass(); \
	UavaParticleModuleGravity::StaticClass(); \

#endif // AVAGAME_PARTICLE_NATIVE_DEFS

#ifdef NATIVES_ONLY
#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE(U,avaParticleModuleAirResistance,AirResistanceBySize)
VERIFY_CLASS_OFFSET_NODIE(U,avaParticleModuleAirResistance,AirResistanceByVelocity)
VERIFY_CLASS_SIZE_NODIE(UavaParticleModuleAirResistance)
VERIFY_CLASS_OFFSET_NODIE(U,avaParticleModuleColorScaleByAmbient,ParticleColorOffset)
VERIFY_CLASS_OFFSET_NODIE(U,avaParticleModuleColorScaleByAmbient,AmbientBase)
VERIFY_CLASS_SIZE_NODIE(UavaParticleModuleColorScaleByAmbient)
VERIFY_CLASS_OFFSET_NODIE(U,avaParticleModuleGravity,GravityAmount)
VERIFY_CLASS_SIZE_NODIE(UavaParticleModuleGravity)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
