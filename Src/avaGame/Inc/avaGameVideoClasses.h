/*===========================================================================
    C++ class definitions exported from UnrealScript.
    This is automatically generated by the tools.
    DO NOT modify this manually! Edit the corresponding .uc files instead!
===========================================================================*/
#if SUPPORTS_PRAGMA_PACK
#pragma pack (push,4)
#endif


// Split enums from the rest of the header so they can be included earlier
// than the rest of the header file by including this file twice with different
// #define wrappers. See Engine.h and look at EngineClasses.h for an example.
#if !NO_ENUMS && !defined(NAMES_ONLY)


#endif // !NO_ENUMS

#if !ENUMS_ONLY

#ifndef NAMES_ONLY
#define AUTOGENERATE_NAME(name) extern FName AVAGAME_##name;
#define AUTOGENERATE_FUNCTION(cls,idx,name)
#endif


#ifndef NAMES_ONLY

class UavaUIVideo : public UUIObject
{
public:
    //## BEGIN PROPS avaUIVideo
    FSceneViewStateInterface* ViewState;
    FSynchronizedActorVisibilityHistory ActorVisibilityHistory;
    struct FCurrentPostProcessVolumeInfo CurrentPPInfo;
    BITFIELD bActive:1;
    FLOAT ViewX;
    FLOAT ViewY;
    FLOAT ViewXL;
    FLOAT ViewYL;
    FLOAT Alpha;
    FLOAT FOV;
    FVector ViewLocation;
    FRotator ViewRotation;
    //## END PROPS avaUIVideo

    DECLARE_CLASS(UavaUIVideo,UUIObject,0,avaGame)
	virtual void FinishDestroy();

	virtual void Render_Widget( FCanvas* Canvas );	

	virtual void PreRenderScene( FCanvas* Canvas, FSceneView* View ) {}
	virtual void PostRenderScene( FCanvas* Canvas ) {}
};

class UavaUIChatCam : public UavaUIVideo
{
public:
    //## BEGIN PROPS avaUIChatCam
    FLOAT Duration;
    FLOAT FadeOut;
    FVector CameraLocation;
    FVector TargetOffset;
    FLOAT Radius;
    FLOAT Border_Thickness;
    FColor Border_Color;
    FLOAT Progress;
    FLOAT StartedTime;
    //## END PROPS avaUIChatCam

    DECLARE_CLASS(UavaUIChatCam,UavaUIVideo,0,avaGame)
	virtual void Render_Widget( FCanvas* Canvas );
};

class UavaUIKillCam : public UavaUIVideo
{
public:
    //## BEGIN PROPS avaUIKillCam
    FLOAT Duration;
    FLOAT FadeIn;
    FLOAT FadeOut;
    BITFIELD bKillerCamera:1;
    FLOAT Killer_FOV;
    FLOAT Killee_FOV;
    FLOAT CameraDistance;
    FLOAT FOV_Speed;
    FLOAT Border_Thickness;
    FColor Border_Color;
    FLOAT Progress;
    FLOAT StartedTime;
    FVector KillCamLocation;
    //## END PROPS avaUIKillCam

    DECLARE_CLASS(UavaUIKillCam,UavaUIVideo,0,avaGame)
	virtual void Render_Widget( FCanvas* Canvas );
};

#endif


#ifndef NAMES_ONLY
#undef AUTOGENERATE_NAME
#undef AUTOGENERATE_FUNCTION
#endif

#ifdef STATIC_LINKING_MOJO
#ifndef AVAGAME_VIDEO_NATIVE_DEFS
#define AVAGAME_VIDEO_NATIVE_DEFS

DECLARE_NATIVE_TYPE(avaGame,UavaUIChatCam);
DECLARE_NATIVE_TYPE(avaGame,UavaUIKillCam);
DECLARE_NATIVE_TYPE(avaGame,UavaUIVideo);

#define AUTO_INITIALIZE_REGISTRANTS_AVAGAME_VIDEO \
	UavaUIChatCam::StaticClass(); \
	UavaUIKillCam::StaticClass(); \
	UavaUIVideo::StaticClass(); \

#endif // AVAGAME_VIDEO_NATIVE_DEFS

#ifdef NATIVES_ONLY
#endif // NATIVES_ONLY
#endif // STATIC_LINKING_MOJO

#ifdef VERIFY_CLASS_SIZES
VERIFY_CLASS_OFFSET_NODIE(U,avaUIChatCam,Duration)
VERIFY_CLASS_OFFSET_NODIE(U,avaUIChatCam,StartedTime)
VERIFY_CLASS_SIZE_NODIE(UavaUIChatCam)
VERIFY_CLASS_OFFSET_NODIE(U,avaUIKillCam,Duration)
VERIFY_CLASS_OFFSET_NODIE(U,avaUIKillCam,KillCamLocation)
VERIFY_CLASS_SIZE_NODIE(UavaUIKillCam)
VERIFY_CLASS_OFFSET_NODIE(U,avaUIVideo,ViewState)
VERIFY_CLASS_OFFSET_NODIE(U,avaUIVideo,ViewRotation)
VERIFY_CLASS_SIZE_NODIE(UavaUIVideo)
#endif // VERIFY_CLASS_SIZES
#endif // !ENUMS_ONLY

#if SUPPORTS_PRAGMA_PACK
#pragma pack (pop)
#endif
